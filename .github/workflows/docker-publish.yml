name: Build and Push Docker Image to DockerHub

on:
  workflow_dispatch:  # 允许手动触发

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的 git 历史，用于版本号检测

      - name: Get OpenList version
        id: get_version
        run: |
          # 尝试多种方式获取版本号
          VERSION=""
          
          # 方法1: 从 package.json 获取版本号（如果是 Node.js 项目）
          if [ -f "package.json" ]; then
            VERSION=$(cat package.json | grep '"version"' | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          fi
          
          # 方法2: 从 setup.py 获取版本号（如果是 Python 项目）
          if [ -z "$VERSION" ] && [ -f "setup.py" ]; then
            VERSION=$(cat setup.py | grep -E "version\s*=\s*['\"]" | head -1 | sed -E "s/.*version\s*=\s*['\"]([^'\"]+)['\"].*/\1/")
          fi
          
          # 方法3: 从 pyproject.toml 获取版本号
          if [ -z "$VERSION" ] && [ -f "pyproject.toml" ]; then
            VERSION=$(cat pyproject.toml | grep -E "^version\s*=\s*['\"]" | head -1 | sed -E "s/.*version\s*=\s*['\"]([^'\"]+)['\"].*/\1/")
          fi
          
          # 方法4: 从 VERSION 文件获取
          if [ -z "$VERSION" ] && [ -f "VERSION" ]; then
            VERSION=$(cat VERSION | tr -d '[:space:]')
          fi
          
          # 方法5: 从 git tag 获取最新版本
          if [ -z "$VERSION" ]; then
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            VERSION=${VERSION#v}  # 移除开头的 'v'
          fi
          
          # 如果还是没有版本号，使用日期作为版本
          if [ -z "$VERSION" ]; then
            VERSION=$(date +%Y%m%d-%H%M%S)
          fi
          
          echo "Detected version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            liu0223/oplist-fp:latest
            liu0223/oplist-fp:${{ steps.get_version.outputs.version }}
          platforms: linux/amd64,linux/arm64  # 支持多架构
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo "Image pushed successfully with tags latest and ${{ steps.get_version.outputs.version }}"
